name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Run tests
      run: go test -v ./...

    - name: Build binaries
      run: |
        # Create dist directory
        mkdir -p dist
        
        # Build for multiple platforms
        GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o dist/smm-linux-amd64 cmd/main.go
        GOOS=linux GOARCH=arm64 go build -ldflags="-s -w" -o dist/smm-linux-arm64 cmd/main.go
        GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o dist/smm-darwin-amd64 cmd/main.go
        GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -o dist/smm-darwin-arm64 cmd/main.go
        GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o dist/smm-windows-amd64.exe cmd/main.go
        
        # Make binaries executable (except Windows)
        chmod +x dist/smm-*
        
        # Create checksums
        cd dist
        sha256sum * > checksums.txt

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          dist/*
        body: |
          ## Changes
          
          See [CHANGELOG.md](CHANGELOG.md) for detailed changes.
          
          ## Installation
          
          Download the appropriate binary for your platform:
          
          - **Linux (x64)**: `smm-linux-amd64`
          - **Linux (ARM64)**: `smm-linux-arm64` 
          - **macOS (Intel)**: `smm-darwin-amd64`
          - **macOS (Apple Silicon)**: `smm-darwin-arm64`
          - **Windows (x64)**: `smm-windows-amd64.exe`
          
          Make the binary executable and optionally rename it:
          ```bash
          chmod +x smm-linux-amd64
          mv smm-linux-amd64 smm
          ```
          
          ## Verification
          
          You can verify the integrity of the downloaded files using the provided checksums:
          ```bash
          sha256sum -c checksums.txt
          ```
        generate_release_notes: true
        draft: false
        prerelease: false